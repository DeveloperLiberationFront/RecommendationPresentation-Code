<experiment>
    <task>
        <text>The SharedPreferences class provides a general framework that allows you to save and retrieve persistent key-value pairs of primitive data types. You can use SharedPreferences to save any primitive data: booleans, floats, ints, longs, and strings. This data will persist across user sessions (even if your application is killed). 

Name three things in the project that are persisted using SharedPreferences.
</text>
        <recommendation>org.eclipse.search.ui.openFileSearchPage</recommendation>
        <recommendation>org.eclipse.search.ui.openSearchDialog</recommendation>
        <recommendation>org.eclipse.jdt.ui.edit.text.java.search.declarations.in.workspace</recommendation>
        <recommendation>org.eclipse.jdt.ui.edit.text.java.open.editor</recommendation>
        <recommendation>org.eclipse.ui.navigate.backwardHistory</recommendation>
        <recommendation>org.eclipse.ui.navigate.forwardHistory</recommendation>
        <recommendation>org.eclipse.jdt.ui.edit.text.java.search.references.in.workspace</recommendation>
        <recommendation>org.eclipse.jdt.ui.edit.text.java.search.references.in.project</recommendation>
        <recommendation>org.eclipse.jdt.ui.edit.text.java.search.references.in.hierarchy</recommendation>
        <recommendation>org.eclipse.ui.edit.findReplace</recommendation>
        <recommendation>org.eclipse.ui.edit.findNext</recommendation>
        <recommendation>org.eclipse.ui.edit.findPrevious</recommendation>
        <recommendation>org.eclipse.ui.edit.findIncremental</recommendation>
        <recommendation>org.eclipse.ui.edit.findIncrementalReverse</recommendation>
        <recommendation>org.eclipse.ui.navigate.next</recommendation>
        <recommendation>org.eclipse.ui.navigate.previous</recommendation>
        
    </task>
    <task>
        <text>In an Android app, ‘Activity’ represents a single screen with user interface. For example, the ComicReader app has an activity that shows list of all the comics the user has subscribed to. An activity is implemented as a subclass of the ‘Activity’ class and it contains an entry point to the application. The application starts at one of these activities.

List all the possible classes that have entry points for the ComicReader app.
        </text>
        <recommendation>org.eclipse.jdt.ui.edit.text.java.open.hierarchy</recommendation>
        <recommendation>org.eclipse.jdt.ui.edit.text.java.open.type.hierarchy</recommendation>
        <recommendation>org.eclipse.search.ui.openFileSearchPage</recommendation>
        <recommendation>org.eclipse.search.ui.openSearchDialog</recommendation>
        <recommendation>org.eclipse.ui.navigate.backwardHistory</recommendation>
        <recommendation>org.eclipse.ui.navigate.forwardHistory</recommendation>
        <recommendation>org.eclipse.jdt.ui.edit.text.java.search.references.in.workspace</recommendation>
        <recommendation>org.eclipse.jdt.ui.edit.text.java.search.references.in.project</recommendation>
        <recommendation>org.eclipse.jdt.ui.edit.text.java.search.references.in.hierarchy</recommendation>
        <recommendation>org.eclipse.ui.edit.findReplace</recommendation>
        <recommendation>org.eclipse.ui.edit.findNext</recommendation>
        <recommendation>org.eclipse.ui.edit.findPrevious</recommendation>
        <recommendation>org.eclipse.ui.edit.findIncremental</recommendation>
        <recommendation>org.eclipse.ui.edit.findIncrementalReverse</recommendation>
        <recommendation>org.eclipse.ui.navigate.next</recommendation>
        <recommendation>org.eclipse.ui.navigate.previous</recommendation>
        
    </task>
    <task>
        <text>On the first run, ComicReader app shows a dialog box asking for volunteer programmers. Thanks to the help they got from their recent users, they don’t need more programmers anymore.

Modify the code so that this dialog box doesn’t show up. You just have to find one line that needs to be commented.

Hint – The application starts in the ActivityComicReader class.
        </text>
		<recommendation>org.eclipse.jdt.ui.edit.text.java.open.call.hierarchy</recommendation>
        <recommendation>org.eclipse.jdt.ui.edit.text.java.show.outline</recommendation>
        <recommendation>org.eclipse.ui.navigate.showIn</recommendation>
        <recommendation>org.eclipse.jdt.ui.navigate.open.type</recommendation>
        <recommendation>org.eclipse.ui.navigate.openResource</recommendation>
        <recommendation>org.eclipse.jdt.ui.edit.text.java.toggle.comment</recommendation>
        <recommendation>org.eclipse.jdt.ui.edit.text.java.add.block.comment</recommendation>
        <recommendation>org.eclipse.jdt.ui.edit.text.java.remove.block.comment</recommendation>
        <recommendation>org.eclipse.ui.edit.text.gotoLastEditPosition</recommendation>
        <recommendation>org.eclipse.ui.navigate.next</recommendation>
        <recommendation>org.eclipse.ui.navigate.previous</recommendation>
        
    </task>
    <task>
        <text>The ComicReader app recently received a request to support a new comic named “Full Frontal Nerdity” (http://ffn.malletspace.net/). You are asked to implement a class named FullFrontalNerdity.java in the comics package. You decided to write the basic frame of the class and give it to your teammate for writing the actual implementation.

Write the required code for the class so that your teammate can write the implementation.

Hint – Go Get a Roomie is an Indexed comic, you will need to inherit the IndexedComic class.
        </text>
        <recommendation>org.eclipse.jdt.ui.edit.text.java.organize.imports</recommendation>
        <recommendation>org.eclipse.jdt.ui.edit.text.java.override.methods</recommendation>
        <recommendation>org.eclipse.ui.edit.text.contentAssist.proposals</recommendation>
        <recommendation>org.eclipse.jdt.ui.edit.text.java.indent</recommendation>
        <recommendation>org.eclipse.ui.navigate.next</recommendation>
        <recommendation>org.eclipse.ui.navigate.previous</recommendation>
        <recommendation>org.eclipse.ui.edit.text.gotoLastEditPosition</recommendation>
        
    </task>
    <task>
        <text>Your teammate recently implemented the required class GoGetARoomie.java to add the comic “Go Get a Roomie” (http://www.gogetaroomie.com/). But this new comic is not yet added to the Activity that shows the list of comics the user can choose.

Add the new comic to the ActivityComicSelector so that it is available to use.

Hint – You might want to start at the ActivityComicSelector.java file.
        </text>
        <recommendation>org.eclipse.jdt.ui.navigate.open.type</recommendation>
        <recommendation>org.eclipse.ui.navigate.openResource</recommendation>
        <recommendation>org.eclipse.jdt.ui.edit.text.java.open.editor</recommendation>
        <recommendation>org.eclipse.ui.edit.text.contentAssist.proposals</recommendation>
        <recommendation>org.eclipse.ui.navigate.backwardHistory</recommendation>
        <recommendation>org.eclipse.ui.navigate.forwardHistory</recommendation>
        <recommendation>org.eclipse.ui.navigate.next</recommendation>
        <recommendation>org.eclipse.ui.navigate.previous</recommendation>
        <recommendation>org.eclipse.ui.edit.text.gotoLastEditPosition</recommendation>
        
    </task>
    <task>
        <text>The author of XKCD comic has requested the app developers that XKCD should be removed from the app. Developers are trying to convince him, but meanwhile, you have to disable XKCD from showing in the list of comics.

The app already has a list of comics that are not shown due to request from comic-authors. Find that list and add XKCD to that list.
        </text>
        <recommendation>org.eclipse.jdt.ui.navigate.open.type</recommendation>
        <recommendation>org.eclipse.ui.navigate.openResource</recommendation>
        <recommendation>org.eclipse.jdt.ui.edit.text.java.open.editor</recommendation>
        <recommendation>org.eclipse.ui.edit.text.contentAssist.proposals</recommendation>
        <recommendation>org.eclipse.ui.navigate.backwardHistory</recommendation>
        <recommendation>org.eclipse.ui.navigate.forwardHistory</recommendation>
        <recommendation>org.eclipse.ui.navigate.next</recommendation>
        <recommendation>org.eclipse.ui.navigate.previous</recommendation>
        <recommendation>org.eclipse.ui.edit.text.gotoLastEditPosition</recommendation>
    </task>
    <task>
        <text>The comic “Go Get a Roomie” you just added has a bug. The bug report says that the parseForLatestId() method does not return the correct ID.

Debug the code and find out what ID it returns.
        </text>
        <recommendation>org.eclipse.ui.perspectives.showPerspective</recommendation>
        <recommendation>org.eclipse.debug.ui.DebugPerspective</recommendation>
		<recommendation>org.eclipse.ui.window.closePerspective</recommendation>
        <recommendation>org.eclipse.ui.window.resetPerspective</recommendation>
        <recommendation>org.eclipse.debug.ui.commands.StepInto</recommendation>
		<recommendation>org.eclipse.debug.ui.commands.StepOver</recommendation>
        <recommendation>org.eclipse.debug.ui.commands.StepReturn</recommendation>
        <recommendation>org.eclipse.jdt.debug.ui.commands.Inspect</recommendation>
		<recommendation>org.eclipse.debug.ui.commands.ToggleBreakpoint</recommendation>
		<recommendation>org.eclipse.jdt.debug.ui.breakpoint.properties</recommendation>
		<recommendation>org.eclipse.debug.ui.commands.Resume</recommendation>
        <recommendation>org.eclipse.debug.ui.commands.SkipAllBreakpoints</recommendation>
        <recommendation>org.eclipse.debug.ui.commands.Terminate</recommendation>
        <recommendation>org.eclipse.ui.navigate.next</recommendation>
        <recommendation>org.eclipse.ui.navigate.previous</recommendation>
        <recommendation>org.eclipse.ui.edit.text.gotoLastEditPosition</recommendation>
        
        
    </task>
    
</experiment>